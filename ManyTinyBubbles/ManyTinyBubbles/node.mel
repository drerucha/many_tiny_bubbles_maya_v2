

/*******************************
 * create ManyTinyBubbles node *
 *******************************/

global proc createManyTinyBubblesNode( string $fluid_container, string $emitter_mesh, int $options_window_displayed )
{
	//createNode transform -n Bubble1;
	//createNode mesh -n BubbleShape1 -p Bubble1;
	//sets -add initialShadingGroup BubbleShape1;
	//createNode CreateBubbleNode -n CreateBubbleNode1;
	//connectAttr time1.outTime CreateBubbleNode1.time;
	//connectAttr CreateBubbleNode1.outputMesh BubbleShape1.inMesh;


	////////////////////////////////////////////////////
	// query UI fields from options window
	////////////////////////////////////////////////////


	// TODO: query UI sliders for $bubble_radius_min and $bubble_radius_max


	int $emission_rate;
	float $melt_rate, $level_set_resolution, $scattering_frequency, $scattering_coefficient, $bubble_breakup, $bubble_radius_min, $bubble_radius_max;

	if ( $options_window_displayed ) {
		$emission_rate			= `intSliderGrp -query -value ui_bubble_rate`;
		$scattering_frequency	= `floatSliderGrp -query -value ui_scattering_rate`;
		$scattering_coefficient	= `floatSliderGrp -query -value ui_scattering_coeff`;
		$bubble_breakup			= `floatSliderGrp -query -value ui_bubble_breakup`;
		$bubble_radius_min		= getDefaultBubbleRadiusMin();
		$bubble_radius_max		= getDefaultBubbleRadiusMax();
		$melt_rate      		= getDefaultMeltingRate();
		$level_set_resolution   = getDefaultLevelSetResolution();
	}
	else {
		$emission_rate			= getDefaultEmissionRate();
		$scattering_frequency	= getDefaultScatteringFrequency();
		$scattering_coefficient	= getDefaultScatteringCoefficient();
		$bubble_breakup			= getDefaultBreakupFrequency();
		$bubble_radius_min		= getDefaultBubbleRadiusMin();
		$bubble_radius_max		= getDefaultBubbleRadiusMax();
		$melt_rate      		= getDefaultMeltingRate();
		$level_set_resolution   = getDefaultLevelSetResolution();
	}


	////////////////////////////////////////////////////
	// create node
	////////////////////////////////////////////////////

	string $node = `createNode ManyTinyBubbles`;


	////////////////////////////////////////////////////
	// set node attributes
	////////////////////////////////////////////////////

	string $cmd;

	//string $emitter_shape = getShapeFromName( $emitter_mesh );
	//$emitter_shape += ".inMesh";
	//$emitter_shape += ".outMesh";
	//$cmd = $node + ".emitter_mesh";
	//connectAttr ManyTinyBubbles1.emitter_mesh pSphere2.outMesh;
	//connectAttr $cmd $emitter_shape;

	// connect time attribute
	string $node_time_attr = $node + ".time";
	connectAttr time1.outTime $node_time_attr;

	$cmd = $node + ".emitter_mesh_name";
	setAttr $cmd -type "string" $emitter_mesh;

	$cmd = $node + ".fluid_container_name";
	setAttr $cmd -type "string" $fluid_container;

	$cmd = $node + ".emission_rate";
	setAttr $cmd $emission_rate;

	$cmd = $node + ".scattering_frequency";
	setAttr $cmd $scattering_frequency;

	$cmd = $node + ".scattering_coefficient";
	setAttr $cmd $scattering_coefficient;

	$cmd = $node + ".breakup_frequency";
	setAttr $cmd $bubble_breakup;

	$cmd = $node + ".bubble_size_min";
	setAttr $cmd $bubble_radius_min;

	$cmd = $node + ".bubble_size_max";
	setAttr $cmd $bubble_radius_max;

	string $fluid_shape_parents[] = `listRelatives -fullPath -parent $fluid_container`;
    $fluid_transform = $fluid_shape_parents[0];

	$cmd = $node + ".fluid_transform_name";
	setAttr $cmd -type "string" $fluid_transform;

	$cmd = $node + ".node_name";
	setAttr $cmd -type "string" $node;

	$cmd = $node + ".melting_rate";
	setAttr $cmd $melt_rate;

	$cmd = $node + ".level_set_resolution";
	setAttr $cmd $level_set_resolution;

	// dummy mesh ouput so we can batch render
	string $dummy_transform = `createNode transform`;
	string $dummy_mesh = `createNode mesh -parent $dummy_transform`;

	// dummy mesh ouput so we can batch render
	string $node_output_mesh_attr = $node + ".output_mesh";
	string $node_dummy_mesh_attr = $dummy_mesh + ".inMesh";
	connectAttr $node_output_mesh_attr $node_dummy_mesh_attr;

	mtbLog( "created node" );
}



/*******************************
 * create ManyTinyBubbles node *
 *******************************/

global proc string getShapeFromName( string $emitter_mesh )
{
	// TODO: test this with obj meshes b/c hardcoded 0 index may not always work

	string $shapes[] = `listRelatives -shapes -path $emitter_mesh`;

	return $shapes[0];
}